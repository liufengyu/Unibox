//
//  ForgetPSDController.m
//  Unibox_iOS
//
//  Created by 刘羽 on 15/12/3.
//  Copyright © 2015年 刘羽. All rights reserved.
//

#import "ForgetPSDController.h"
#import "Header.h"
#import "API.h"
#import "UIImage+Color.h"
#import "CheckUser.h"
#import "MD5Helper.h"
#import "AppDelegate.h"
#import "AFNetworking.h"

@interface ForgetPSDController () <UITextFieldDelegate>
{
    //UIView *_clearView;
    UIView *_bgView;
    
    //用户名
    UITextField *_userNameTF;
    //密码
    UITextField *_psdTF;
    //再次输入密码
    UITextField *_surePsdTF;
    //验证码
    UITextField *_verifyTF;
    //重置密码按钮
    UIButton *_resetBtn;
    
    //用户名
    NSString *_userName;
    //密码
    NSString *_psd;
    //确认密码
    NSString *_surePsd;
    //验证码
    NSString *_verify;
    //验证码id
    NSString *_verifyID;
    
    //获取验证码按钮
    UIButton *_getVerifyBtn;
    
    //计时
    int count;
    NSTimer *_time;
}
@end

@implementation ForgetPSDController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.title = @"重置密码";
    self.view.backgroundColor = RGB(232, 233, 232);
    
    //键盘升起和降落的通知
//    [[NSNotificationCenter defaultCenter] addObserver:self
//                                             selector:@selector(keyboardWillShow:)
//                                                 name:UIKeyboardWillShowNotification
//                                               object:nil];
//    [[NSNotificationCenter defaultCenter] addObserver:self
//                                             selector:@selector(keyboardWillHide:)
//                                                 name:UIKeyboardWillHideNotification
//                                               object:nil];
    
    [self configLeftBar];
    //创建UI
    [self createUI];
}


- (void)dealloc{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    [_time invalidate];
    _time = nil;
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self.navigationController.navigationBar setBackgroundImage:[UIImage imageWithColor:[UIColor whiteColor]] forBarMetrics:UIBarMetricsDefault];
    
}

- (void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    [self.view endEditing:YES];
}

//- (void)keyboardWillShow:(NSNotification *)note{
//    CGRect keyboardBounds;
//    [[note.userInfo valueForKey:UIKeyboardFrameEndUserInfoKey] getValue: &keyboardBounds];
//    //NSLog(@"%@",note.userInfo);
//    NSNumber *duration = [note.userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey];
//    NSNumber *curve = [note.userInfo objectForKey:UIKeyboardAnimationCurveUserInfoKey];
//    
//    // Need to translate the bounds to account for rotation.
//    keyboardBounds = [self.view convertRect:keyboardBounds toView:nil];
//    //CGRect textFrame;
//    /*
//     //密码
//     UITextField *_psdTF;
//     //再次输入密码
//     UITextField *_surePsdTF;
//     //验证码
//     UITextField *_verifyTF;
//     */
//    //UITextField *textF = (UITextField *)[self.view viewWithTag:102];
//    CGFloat height = 0.0;
//    if (_verifyTF.editing) {
//        height = (kScreenHeight - (_bgView.y + _bgView.height / 4 * 2)) - keyboardBounds.size.height - 64;
//    } else if (_psdTF.editing) {
//        height = (kScreenHeight - (_bgView.y + _bgView.height / 4 * 3)) - keyboardBounds.size.height - 64;
//    } else if (_surePsdTF.editing) {
//        height = (kScreenHeight - (_bgView.y + _bgView.height / 4 * 4)) - keyboardBounds.size.height - 64;
//    }
//    if (height < 0) {
//        [UIView beginAnimations:nil context:NULL];
//        [UIView setAnimationBeginsFromCurrentState:YES];
//        [UIView setAnimationDuration:[duration doubleValue]];
//        [UIView setAnimationCurve:[curve intValue]];
//        [UIView setAnimationDelegate:self];
//        
//        // set views with new info
//        _clearView.y = 64.0 + height;;
//        // commit animations
//        [UIView commitAnimations];
//    } else {
//        [UIView beginAnimations:nil context:NULL];
//        [UIView setAnimationBeginsFromCurrentState:YES];
//        [UIView setAnimationDuration:[duration doubleValue]];
//        [UIView setAnimationCurve:[curve intValue]];
//        [UIView setAnimationDelegate:self];
//        
//        // set views with new info
//        _clearView.y = 64.0;
//        // commit animations
//        [UIView commitAnimations];
//    }
//}
//
//- (void)keyboardWillHide:(NSNotification *)note{
//    CGRect keyboardBounds;
//    [[note.userInfo valueForKey:UIKeyboardFrameEndUserInfoKey] getValue: &keyboardBounds];
//    //NSLog(@"%@",note.userInfo);
//    NSNumber *duration = [note.userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey];
//    NSNumber *curve = [note.userInfo objectForKey:UIKeyboardAnimationCurveUserInfoKey];
//    
//    // Need to translate the bounds to account for rotation.
//   // keyboardBounds = [self.view convertRect:keyboardBounds toView:nil];
//    if (_clearView.y != 64) {
//        [UIView beginAnimations:nil context:NULL];
//        [UIView setAnimationBeginsFromCurrentState:YES];
//        [UIView setAnimationDuration:[duration doubleValue]];
//        [UIView setAnimationCurve:[curve intValue]];
//        [UIView setAnimationDelegate:self];
//        
//        // set views with new info
//        _clearView.y = 64;
//        // commit animations
//        [UIView commitAnimations];
//    }
//}

#pragma mark 创建UI
- (void)createUI{
    //UIView *clearView = [[UIView alloc]initWithFrame:CGRectMake(0, 64, kScreenWidth, kScreenHeight - 64.0)];
    //clearView.backgroundColor = [UIColor clearColor];
    //_clearView = clearView;
    //添加点按事件
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(tapClearView)];
    [self.view addGestureRecognizer:tap];
    
    //[self.view addSubview:clearView];
    
    //logo图片
    UIImageView *logoView = [MyControl createImageViewFrame:CGRectMake((kScreenWidth - 82 / kHeightScale) / 2, 20 + 64.0, 82 / kHeightScale, 82 / kHeightScale) imageName:@"lg-logo"];
    //logoView.clipsToBounds = YES;
    logoView.layer.cornerRadius = 82 / kHeightScale / 2;
    [self.view addSubview:logoView];
    
    //背景视图
    UIView *bgView = [[UIView alloc]initWithFrame:CGRectMake(30, CGRectGetMaxY(logoView.frame) + 20, kScreenWidth - 60, (kScreenWidth - 60) / 5 * 4)];
    bgView.backgroundColor = [UIColor whiteColor];
    bgView.clipsToBounds = NO;
    bgView.layer.shadowColor = [UIColor grayColor].CGColor;
    bgView.layer.shadowOffset = CGSizeMake(1, 1);
    bgView.layer.shadowRadius = 1.0f;
    bgView.layer.shadowOpacity = 0.8;
    _bgView =bgView;
    [self.view addSubview:bgView];
    
    //每行的高度
    CGFloat height = bgView.height / 4;
    //用户名图片
    UIImageView *userIv = [MyControl createImageViewFrame:CGRectMake(10, (height - 24) / 2, 26.5, 24) imageName:@"lg-yonghuming"];
    [bgView addSubview:userIv];
    
    UIView *line1 = [[UIView alloc]initWithFrame:CGRectMake(CGRectGetMaxX(userIv.frame) + 10, height - 1, bgView.width - CGRectGetMaxX(userIv.frame) - 20, 1)];
    line1.backgroundColor = RGB(205, 205, 205);
    [bgView addSubview:line1];
    
    //密码图片
    UIImageView *verifyIv = [MyControl createImageViewFrame:CGRectMake(10, height + (height- 28) / 2, 21, 28) imageName:@"lg-yanzhengma"];
    [bgView addSubview:verifyIv];
    UIView *line2 = [[UIView alloc]initWithFrame:CGRectMake(CGRectGetMaxX(userIv.frame) + 10, height * 2 - 1, line1.width, 1)];
    line2.backgroundColor = RGB(205, 205, 205);
    [bgView addSubview:line2];
    
    //密码图片
    UIImageView *surePsdIv = [MyControl createImageViewFrame:CGRectMake(10, height * 2 + (height - 28) / 2, 21, 28) imageName:@"lg-mima"];
    [bgView addSubview:surePsdIv];
    UIView *line3 = [[UIView alloc]initWithFrame:CGRectMake(CGRectGetMaxX(userIv.frame) + 10, height * 3 - 1, line1.width, 1)];
    line3.backgroundColor = RGB(205, 205, 205);
    [bgView addSubview:line3];
    
    //验证码图片
    UIImageView *psdIv = [MyControl createImageViewFrame:CGRectMake(10, height * 3 + (height - 29.5) / 2, 22.5, 29.5) imageName:@"lg-mima"];
    [bgView addSubview:psdIv];
    //手机号textField
    UITextField *userNameTF = [[UITextField alloc]initWithFrame:CGRectMake(line1.x, 10, line1.width, (height - 1) - 20)];
    userNameTF.font = [UIFont systemFontOfSize:14.0];
    userNameTF.placeholder = @"手机号";
    userNameTF.delegate = self;
    userNameTF.keyboardType = UIKeyboardTypeNumberPad;
    _userNameTF = userNameTF;
    [bgView addSubview:userNameTF];
    
    //验证码textField
    UITextField *verifyTF = [[UITextField alloc]initWithFrame:CGRectMake(line1.x, height + 10, 110 / kWidthScale, userNameTF.height)];
    verifyTF.font = [UIFont systemFontOfSize:14.0];
    verifyTF.placeholder = @"请输入验证码";
    verifyTF.delegate = self;
    verifyTF.backgroundColor = RGB(232, 233, 232);
    verifyTF.layer.cornerRadius = 5.0f;
    _verifyTF = verifyTF;
    verifyTF.keyboardType = UIKeyboardTypeNumberPad;
    [bgView addSubview:verifyTF];
    
    //密码textField
    UITextField *psdTF = [[UITextField alloc]initWithFrame:CGRectMake(line1.x, height * 2 + 10, line1.width, userNameTF.height)];
    psdTF.font = [UIFont systemFontOfSize:14.0];
    psdTF.placeholder = @"请输入密码";
    psdTF.delegate = self;
    psdTF.secureTextEntry = YES;
    _psdTF = psdTF;
    [bgView addSubview:psdTF];
    
    //再次输入密码textField
    UITextField *surePsdTF = [[UITextField alloc]initWithFrame:CGRectMake(line1.x, height * 3 + 10, line1.width, userNameTF.height)];
    surePsdTF.font = [UIFont systemFontOfSize:14.0];
    surePsdTF.placeholder = @"请再次输入密码";
    surePsdTF.delegate = self;
    surePsdTF.secureTextEntry = YES;
    _surePsdTF = surePsdTF;
    [bgView addSubview:surePsdTF];
    
    
    //获取验证码按钮
    UIButton *getVerifyBtn = [MyControl createButtonWithFrame:CGRectMake(bgView.width - 110 / kWidthScale, verifyTF.y, 110 / kWidthScale, userNameTF.height) target:self SEL:@selector(verifyBtnClick) title:@"获取验证码"];
    _getVerifyBtn = getVerifyBtn;
    getVerifyBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    [getVerifyBtn setTitleColor:kRed forState:UIControlStateNormal];
    [getVerifyBtn setTitleColor:kMidgray forState:UIControlStateDisabled];
    [bgView addSubview:getVerifyBtn];
    
    //注册按钮
    UIButton *resetBtn = [MyControl createButtonWithFrame:CGRectMake(bgView.x, CGRectGetMaxY(bgView.frame) + 10, bgView.width, 45) target:self SEL:@selector(resetBtnClick) title:@"重置"];
    _resetBtn = resetBtn;
    resetBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    [resetBtn setBackgroundImage:[UIImage imageWithColor:RGB(230, 88, 53)] forState:UIControlStateNormal];
    [resetBtn setBackgroundImage:[UIImage imageWithColor:[UIColor grayColor]] forState:UIControlStateDisabled];
    resetBtn.enabled = NO;
    
    //registerBtn.backgroundColor = kRed;
    [self.view addSubview:resetBtn];
    
    UIView *naviBarView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth, 64.0)];
    naviBarView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:naviBarView];
}

-(BOOL)textFieldShouldReturn:(UITextField *)textField{
    if (textField == _userNameTF) {
        [_userNameTF resignFirstResponder];
        [_verifyTF   becomeFirstResponder];
    } else if (textField == _verifyTF) {
        [_verifyTF resignFirstResponder];
        [_psdTF    becomeFirstResponder];
    } else if (textField == _psdTF) {
        [_psdTF     resignFirstResponder];
        [_surePsdTF becomeFirstResponder];
    } else {
        [_surePsdTF resignFirstResponder];
    }
    return YES;
}

- (void)textFieldDidBeginEditing:(UITextField *)textField{
//    CGFloat height = 0.0;
//    if (textField == _userNameTF) {
//        height = (kScreenHeight - (_bgView.y + _bgView.height / 4)) - 216 - 64;
//    }
//    else if (textField == _psdTF){
//        height = (kScreenHeight - (_bgView.y + _bgView.height / 4 * 3)) - 216 - 64;
//    }
//    else if (textField == _surePsdTF){
//        height = (kScreenHeight - (_bgView.y + _bgView.height / 4 * 4)) - 216 - 64;
//    }
//    else{
//        height = (kScreenHeight - (_bgView.y + _bgView.height / 4 * 2)) - 216 - 64;
//    }
//    NSLog(@"%f",height);
//    if (height < 0.0) {
//        [UIView animateWithDuration:0.25f animations:^{
//            _clearView.y = 0;
//            _clearView.y += height;
//        }];
//    }
}

- (void)textFieldDidEndEditing:(UITextField *)textField{
    if (textField == _userNameTF) {
        _userName = textField.text;
        if(_userName.length != 11 && _userName.length != 0){
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"请输入11位手机号" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
        }
    } else if (textField == _psdTF) {
        _psd = _psdTF.text;
        if (_surePsd.length) {
            if (![_psd isEqualToString:_surePsd]) {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"两次密码不一致" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
                [alert show];
            }
        }
    } else if (textField == _surePsdTF){
        _surePsd = _surePsdTF.text;
        if (_psd.length && _surePsd.length) {
            if (![_psd isEqualToString:_surePsd]) {
                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"两次密码不一致" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
                [alert show];
            }
        }
    } else {
        _verify = _verifyTF.text;
    }
    
//    if (_clearView.y != 64) {
//        [UIView animateWithDuration:0.25f animations:^{
//            _clearView.y = 64;
//        }];
//    }
}

- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if ([string isEqualToString:@"\n"])
    {
        return YES;
    }
    NSString * toBeString = [textField.text stringByReplacingCharactersInRange:range withString:string];
    
    if (textField == _userNameTF){
        if ([toBeString length]){
            if ([toBeString length] > 11) {
                textField.text = [toBeString substringToIndex:11];
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"手机号不能超过11位" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
                [alert show];
                return NO;
            } else {
                if ([_psdTF.text length] && [_surePsdTF.text length] && [_verifyTF.text length]) {
                    _resetBtn.enabled = YES;
                }
            }
        } else {
            _resetBtn.enabled = NO;
        }
    } else if (textField == _psdTF){
        if ([toBeString length]) {
            if ([_userNameTF.text length] && [_surePsdTF.text length] && [_verifyTF.text length]) {
                _resetBtn.enabled = YES;
            }
        } else {
            _resetBtn.enabled = NO;
        }
    } else if (textField == _surePsdTF) {
        if ([toBeString length]) {
            if ([_userNameTF.text length] && [_psdTF.text length] && [_verifyTF.text length]) {
                _resetBtn.enabled = YES;
            }
        } else {
            _resetBtn.enabled = NO;
        }
    } else {
        if ([toBeString length]) {
            if ([_userNameTF.text length] && [_psdTF.text length] && [_surePsdTF.text length]) {
                _resetBtn.enabled = YES;
            }
        } else {
            _resetBtn.enabled = NO;
        }
    }
    return YES;
}


#pragma mark 背景点按事件
- (void)tapClearView{
    if (_userNameTF.editing) {
        [_userNameTF resignFirstResponder];
    }
    if (_verifyTF.editing) {
        [_verifyTF resignFirstResponder];
    }
    if (_psdTF.editing) {
        [_psdTF resignFirstResponder];
    }
    if (_surePsdTF.editing) {
        [_surePsdTF resignFirstResponder];
    }
}

#pragma mark 获取验证码按钮
- (void)verifyBtnClick{
//    if ([_userNameTF.text length] != 11) {
//        //
//    }
    
    if (![_userName isEqualToString:_userNameTF.text]) {
        _userName = _userNameTF.text;
    }
    
    if ([CheckUser validateMobile:_userName]) {
        [self verifyMobile:_userName];
    } else {
        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"提示" message:@"请输入正确的手机号" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alert show];
    }
}

#pragma mark 发送验证码
- (void)sendVerifyCode{
    AFNetworkReachabilityManager *netStatus = [AFNetworkReachabilityManager sharedManager];
    [netStatus startMonitoring];
    [netStatus setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) {
        if (status == AFNetworkReachabilityStatusNotReachable) {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"提示" message:@"当前无网络,请联网后重试" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
        } else {
            count = 60;
            [_getVerifyBtn setTitle:[NSString stringWithFormat:@"%d秒后重新获取",count] forState:UIControlStateNormal];
            
            _getVerifyBtn.enabled = NO;
            _time = [NSTimer scheduledTimerWithTimeInterval:1.0 target:self selector:@selector(timeChange) userInfo:nil repeats:YES];
            AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
            //发送验证码
            //参数1:phone    11位数字
            //参数2:type     1 注册
            //              2 找回密码
            NSDictionary *dic = @{
                                  @"phone":_userName,
                                  @"type":@"2"
                                  };
            NSLog(@"%@",_userName);
            AppDelegate *app = [UIApplication sharedApplication].delegate;
            [manager GET:[NSString stringWithFormat:@"http://%@%@",app.host_ip, SendVCode_URL] parameters:dic success:^(AFHTTPRequestOperation *operation, id responseObject) {
                if (![[responseObject objectForKey:@"ret"] intValue])
                {
                    _verifyID = [responseObject objectForKey:@"vid"];
                }
                else
                {
                    NSLog(@"获取验证码失败");
                }
            } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
                NSLog(@"请求验证码失败");
            }];
        }
    }];
}

- (void)timeChange{
    count--;
    if (count == 0){
        [_time invalidate];
        _time = nil;
        [_getVerifyBtn setTitle:@"重新获取验证码" forState:UIControlStateNormal];
        _getVerifyBtn.enabled = YES;
        return;
    }
    [_getVerifyBtn setTitle:[NSString stringWithFormat:@"%d秒后重新获取",count] forState:UIControlStateNormal];
}

#pragma mark 重置密码按钮点击
- (void)resetBtnClick{
    //_resetBtn.enabled = NO;
    JGProgressHUD *hud = [[JGProgressHUD alloc]initWithStyle:JGProgressHUDStyleDark];
    hud.interactionType = JGProgressHUDInteractionTypeBlockTouchesOnHUDView;
    JGProgressHUDFadeZoomAnimation *an = [JGProgressHUDFadeZoomAnimation animation];
    hud.animation = an;
    hud.textLabel.text = @"重置中...";
    __block BOOL confirmationAsked = NO;
    hud.tapOnHUDViewBlock = ^(JGProgressHUD *h) {
        if (confirmationAsked) {
            [h dismiss];
        } else {
            h.indicatorView = [[JGProgressHUDErrorIndicatorView alloc]init];
            h.textLabel.text = @"取消 ?";
            confirmationAsked = YES;
            
            CABasicAnimation *an = [CABasicAnimation animationWithKeyPath:@"shadowOpacity"];
            an.fromValue = @(0.0f);
            an.toValue = @(0.5f);
            
            an.repeatCount = HUGE_VALF;
            an.autoreverses = YES;
            
            an.duration = 0.75f;
            
            h.HUDView.layer.shadowColor = [UIColor redColor].CGColor;
            h.HUDView.layer.shadowOffset = CGSizeZero;
            h.HUDView.layer.shadowOpacity = 0.0f;
            h.HUDView.layer.shadowRadius = 8.0f;
            
            [h.HUDView.layer addAnimation:an forKey:@"glow"];
            
            __weak __typeof(h) wH = h;
            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(4.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                if (wH && confirmationAsked) {
                    confirmationAsked = NO;
                    __strong __typeof(wH) sH = wH;
                    
                    sH.indicatorView = [[JGProgressHUDIndeterminateIndicatorView alloc] initWithHUDStyle:sH.style];
                    sH.textLabel.text = @"重置中...";
                    [h.HUDView.layer removeAnimationForKey:@"glow"];
                }
            });
            
        }
    };
    hud.tapOutsideBlock = ^(JGProgressHUD *h) {
        if (confirmationAsked) {
            confirmationAsked = NO;
            h.indicatorView = [[JGProgressHUDIndeterminateIndicatorView alloc] initWithHUDStyle:h.style];
            h.textLabel.text = @"重置中...";
            [h.HUDView.layer removeAnimationForKey:@"glow"];
        }
    };
    
    
    [hud showInView:self.navigationController.view];
    
    
    
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    /*
     ** phone    11位数字
     ** psd1     第一次密码md5后的字符串
     ** psd2     第二次密码md5后的字符串
     ** vcode    验证码
     ** vid      验证码对应唯一ID
     */
    if (_userName.length == 0){
        _userName = _userNameTF.text;
        if (![CheckUser validateMobile:_userName]) {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"提示" message:@"请输入正确的手机号" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
            return;
        }
    }
    if (_verify.length == 0) {
        _verify = _verifyTF.text;
    }
    if (_psd.length == 0) {
        _psd = _psdTF.text;
    }
    if (_surePsd.length == 0) {
        _surePsd = _surePsdTF.text;
    }
    if (_verifyID.length == 0) {
        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"验证码不正确" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [alert show];
        return;
    }
    
    NSDictionary *dic = @{
                          @"phone":_userName,
                          @"psd1":[MD5Helper MD5WithString:_psd],
                          @"psd2":[MD5Helper MD5WithString:_surePsd],
                          @"vid":_verifyID,
                          @"vcode":_verify
                          };
    NSLog(@"%@",dic);
    AppDelegate *app = [UIApplication sharedApplication].delegate;
    [manager GET:[NSString stringWithFormat:@"http://%@%@",app.host_ip,ResetPsd_URL] parameters:dic success:^(AFHTTPRequestOperation *operation, id responseObject) {
        if (![[responseObject objectForKey:@"ret"] intValue]) {
            hud.indicatorView = [[JGProgressHUDSuccessIndicatorView alloc]init];
            
            hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
            
            hud.textLabel.text = @"重置完成";
            [self.navigationController popToRootViewControllerAnimated:YES];
        } else {
            hud.indicatorView = [[JGProgressHUDErrorIndicatorView alloc]init];
            
            hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
            
            hud.textLabel.text = @"重置失败";
        }
        hud.position = JGProgressHUDPositionCenter;
        
        [hud dismissAfterDelay:1.0f animated:YES];
        NSLog(@"%@",responseObject);
        
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        hud.indicatorView = [[JGProgressHUDErrorIndicatorView alloc]init];
        hud.textLabel.text = @"重置失败";
        hud.layoutChangeAnimationDuration = 0.3;
        [hud dismissAfterDelay:1.0f animated:YES];
    }];

}

- (void)verifyMobile:(NSString *)phone{
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    NSDictionary *dic = @{@"phone":phone};
    AppDelegate *app = [UIApplication sharedApplication].delegate;
    [manager GET:[NSString stringWithFormat:@"http://%@%@",app.host_ip, CheckPhone_URL] parameters:dic success:^(AFHTTPRequestOperation *operation, id responseObject) {
        NSLog(@"%@",responseObject);
        if (![responseObject[@"ret"] boolValue]) {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"输入的手机号未注册" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
            [alert show];
        } else {
            [self sendVerifyCode];
        }
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        //
    }];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
