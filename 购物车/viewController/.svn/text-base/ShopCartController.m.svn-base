//
//  ShopCartController.m
//  Unibox_iOS
//
//  Created by 刘羽 on 15/12/1.
//  Copyright © 2015年 刘羽. All rights reserved.
//

#import "ShopCartController.h"
#import "UIImage+Color.h"
#import "UIImageView+WebCache.h"
#import "Header.h"
#import "API.h"
#import "AllSelectButton.h"
#import "ShopCartTableViewCell.h"
#import "ShopCartZeroTableViewCell.h"
#import "ShopCartEditCell.h"
#import "CartModel.h"
#import "MovieDetailController.h"
#import "PayViewController.h"
#import "AppDelegate.h"
#import "UIImage+Tint.h"
#import "MapViewController.h"
#import "NetWork.h"

@interface ShopCartController () <UITableViewDelegate, UITableViewDataSource, ShopCartTableViewCellDelegate,ShopCartEditCellDelegate>
{
    UITableView *_tb;
    
    //记录选择了多少张
    NSInteger selectNum;
    //记录总押金
    NSInteger totalDeposit;
    //选择张数label
    UILabel *_totalNumLb;
    //合计押金label
    UILabel *_totalDepositLb;
    //立即结算按钮
    UIButton *_settleBtn;
    //数据源
    NSMutableArray *_dataArr;
    //租赁机地址
    NSString *_address;
    //记录编辑状态
    BOOL isEditing;
    //全选按钮
    AllSelectButton *_allSelectBtn;
    //选中商品数组
    NSMutableArray *_selectArr;
    //重新加载位置
    //BOOL isReload;
}
@end

@implementation ShopCartController

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];
    [self.navigationController.navigationBar setTitleTextAttributes:@{NSForegroundColorAttributeName:[UIColor whiteColor]}];
    //更改navigationBar颜色
    //self.edgesForExtendedLayout = UIRectEdgeAll;
    //[self.navigationController.navigationBar setBackgroundImage:[UIImage imageWithColor:[UIColor clearColor]] forBarMetrics:UIBarMetricsDefault];
    //self.edgesForExtendedLayout = UIRectEdgeAll;
    if (_dataArr.count) {
//        isReload = YES;
        [_selectArr removeAllObjects];
        totalDeposit = 0;
        NSMutableAttributedString *str1 = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"合计押金: ￥%ld", totalDeposit] attributes:nil];
        [str1 addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(6, str1.length - 6)];
        _totalDepositLb.attributedText = str1;
        
        selectNum = 0;
        NSMutableAttributedString *str = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"共计: %ld张", selectNum] attributes:nil];
        [str addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(4, str.length - 4)];
        _totalNumLb.attributedText = str;
        _allSelectBtn.selected = NO;
        _settleBtn.enabled = NO;
        [self loadData];
    }
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.view.backgroundColor = kWhite_Main;
    //isReload = NO;
    
    //self.edgesForExtendedLayout = UIRectEdgeAll;
    //[self.navigationController.navigationBar setBackgroundImage:[UIImage imageWithColor:[UIColor clearColor]] forBarMetrics:UIBarMetricsDefault];
    
    selectNum = 0;
    totalDeposit = 0;
    isEditing = NO;
    self.title = @"购物车";
    _dataArr = [NSMutableArray array];
    _selectArr = [NSMutableArray array];
    
    //修改返回按钮
    [self configLeftBarWhite];
    //创建UI
    [self createUI];
    
    //加载数据
    [self loadData];
}

#pragma mark 加载数据
- (void)loadData{
    //AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    NSDictionary *dic = @{
                          @"_memberId":[User objectForKey:kMemberId],
                          @"_accessToken":[User objectForKey:kAccessToken]
                          };
    JGProgressHUD *hud = [[JGProgressHUD alloc]initWithStyle:JGProgressHUDStyleDark];
    //hud.textLabel.text = @"加载中";
    [hud showInView:self.view];
    AppDelegate *app = [UIApplication sharedApplication].delegate;
    [_dataArr removeAllObjects];
    [NetWork getRequest:[NSString stringWithFormat:@"http://%@%@",app.host_ip,GetUserCart_URL] params:dic success:^(id responseObj) {
        if (![responseObj[@"ret"] boolValue]) {
            for (NSDictionary *d in responseObj[@"list"]) {
                CartModel *model = [[CartModel alloc]init];
                [model setValuesForKeysWithDictionary:d];
                model.isSelected = NO;
                model.isEditing = NO;
                [_dataArr addObject:model];
            }
            [hud dismissAnimated:YES];
            _address = responseObj[@"kiosk"][@"location"];
        }
        //if (isReload) {
            //[_tb reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:0 inSection:0]] withRowAnimation:UITableViewRowAnimationAutomatic];
        //} else {
            [_tb reloadData];
        //}
    } failure:^(NSError *error) {
        //
    }];
//    [NetWork get:[NSString stringWithFormat:@"http://%@%@",app.host_ip,GetUserCart_URL] parameters:dic success:^(id responseObject) {
//        if (![responseObject[@"ret"] boolValue]) {
//            for (NSDictionary *d in responseObject[@"list"]) {
//                CartModel *model = [[CartModel alloc]init];
//                [model setValuesForKeysWithDictionary:d];
//                model.isSelected = NO;
//                model.isEditing = NO;
//                [_dataArr addObject:model];
//            }
//            [hud dismissAnimated:YES];
//            _address = responseObject[@"kiosk"][@"location"];
//        }
//        if (isReload) {
//            [_tb reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:0 inSection:0]] withRowAnimation:UITableViewRowAnimationAutomatic];
//        } else {
//            [_tb reloadData];
//        }
//    } fail:^(NSError *error) {
//        //
//    }];
//    [manager GET:[NSString stringWithFormat:@"http://%@%@",app.host_ip,GetUserCart_URL] parameters:dic success:^(AFHTTPRequestOperation *operation, id responseObject) {
//        //
//        if (![responseObject[@"ret"] boolValue]) {
//            for (NSDictionary *d in responseObject[@"list"]) {
//                CartModel *model = [[CartModel alloc]init];
//                [model setValuesForKeysWithDictionary:d];
//                model.isSelected = NO;
//                model.isEditing = NO;
//                [_dataArr addObject:model];
//            }
//            [hud dismissAnimated:YES];
//            _address = responseObject[@"kiosk"][@"location"];
//        }
//        if (isReload) {
//            [_tb reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:0 inSection:0]] withRowAnimation:UITableViewRowAnimationAutomatic];
//        } else {
//            [_tb reloadData];
//        }
//    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
//        //
//    }];
    
}

- (void)createUI{
    UIView *bgView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth, 64.0)];
    bgView.backgroundColor = kRed;
    [self.view addSubview:bgView];
    
    [self createTB];
    [self createBottomView];
}

#pragma mark 创建tb
- (void)createTB{
    _tb = [[UITableView alloc]initWithFrame:CGRectMake(0, 10 + 64, kScreenWidth, kScreenHeight - 64 - 50.0 - 10) style:UITableViewStylePlain];
    _tb.delegate = self;
    _tb.dataSource = self;
    [_tb registerNib:[UINib nibWithNibName:@"ShopCartTableViewCell" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:@"SCFCell"];
    [_tb registerNib:[UINib nibWithNibName:@"ShopCartZeroTableViewCell" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:@"SCZCell"];
    [_tb registerNib:[UINib nibWithNibName:@"ShopCartEditCell" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:@"SCECell"];
    _tb.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tb.tableFooterView = [[UIView alloc]init];
    _tb.backgroundColor = [UIColor clearColor];
    //_tb.editing = YES;
    [self.view addSubview:_tb];
}

#pragma mark - UITableView代理
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    if (section == 0) {
        return 1;
    } else{
        return _dataArr.count;
    }
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 2;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (indexPath.section == 1) {
        return 77.5;
    } else {
        return 45.0;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    if (section == 0) {
        return 0.0;
    } else {
        return 45.0;
    }
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    if (section == 0) {
        return 10.0;
    } else {
        return 0.5;
    }
    
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    if (section == 1) {
        UIView *bgView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth, 45.0)];
        bgView.backgroundColor = [UIColor whiteColor];
        
        //购物车明细label
        UILabel *lb = [MyControl createLabelWithFrame:CGRectMake(10, 0, 100, 45.0) Font:15.0f Text:@"购物车明细"];
        [lb sizeToFit];
        lb.y = (45 - lb.height) / 2;
        [bgView addSubview:lb];
        
        //编辑按钮
        UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
        btn.frame = CGRectMake(kScreenWidth - 50, 0, 50.0, 45.0);
        [btn setTitle:@"编辑" forState:UIControlStateNormal];
        [btn setTitle:@"完成" forState:UIControlStateSelected];
        btn.selected = isEditing;
        btn.titleLabel.font = [UIFont systemFontOfSize:15.0];
        [btn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        [btn setTitleColor:[UIColor blackColor] forState:UIControlStateSelected];
        [btn addTarget:self action:@selector(editBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [bgView addSubview:btn];
        return bgView;
    } else {
        UIView *v = [[UIView alloc]init];
        return v;
    }
}

#pragma mark 编辑按钮点击事件
- (void)editBtnClick:(UIButton *)btn{
    btn.selected = !btn.selected;
    if (btn.selected) {
        //tb为编辑状态
        isEditing = YES;
        for (int i = 0; i < _dataArr.count; i++) {
            CartModel *model = _dataArr[i];
            model.isEditing = YES;
        }
    } else {
        //tb为正常状态
        isEditing = NO;
        for (int i = 0; i < _dataArr.count; i++) {
            CartModel *model = _dataArr[i];
            model.isEditing = NO;
        }
    }
    [_tb reloadData];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (indexPath.section == 0) {
        ShopCartZeroTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"SCZCell" forIndexPath:indexPath];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.addressLb.text = _address;
        return cell;
    }
    else{
        CartModel *model = _dataArr[indexPath.row];
        if (model.isEditing) {
            ShopCartEditCell *cell = [tableView dequeueReusableCellWithIdentifier:@"SCECell" forIndexPath:indexPath];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            
            [cell.iv sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",Image_IP,model.movieImg]] placeholderImage:imageNamed(@"placehold")];
            
            cell.desLb.text = [NSString stringWithFormat:@"￥%@",model.deposit];
            NSString *category = [model.blueray boolValue] ? @"蓝光":@"DVD";
            cell.delegate = self;
            cell.selBtn.selected = model.isSelected;
            //cell.editBtn.hidden = ![model isEditing];
            //NSLog(@"%d,%d",model.isSelected,model.isEditing);
            cell.nameLb.text = [NSString stringWithFormat:@"%@",model.movieName];
            cell.categoryLb.text = category;
            cell.stockLb.text = [model.inventory boolValue] ? @"有货":@"缺货";
            return cell;
        } else {
            ShopCartTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"SCFCell" forIndexPath:indexPath];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            
            [cell.iv sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",Image_IP,model.movieImg]] placeholderImage:imageNamed(@"placehold")];
            
            cell.desLb.text = [NSString stringWithFormat:@"￥%@",model.deposit];
            NSString *category = [model.blueray boolValue] ? @"蓝光":@"DVD";
            cell.delegate = self;
            cell.selBtn.selected = model.isSelected;
            //cell.editBtn.hidden = ![model isEditing];
            //NSLog(@"%d,%d",model.isSelected,model.isEditing);
            cell.nameLb.text = [NSString stringWithFormat:@"%@",model.movieName];
            cell.categoryLb.text = category;
            cell.stockLb.text = [model.inventory boolValue] ? @"有货":@"缺货";
            return cell;
        }
    }
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    if (indexPath.section == 0) {
        MapViewController *vc = [[MapViewController alloc]init];
        //
        [self.navigationController pushViewController:vc animated:YES];
    } else {
        MovieDetailController *vc = [[MovieDetailController alloc]init];
        vc.titleId = [_dataArr[indexPath.row] titleId];
        //
        [self.navigationController pushViewController:vc animated:YES];
    }
}

#pragma mark 创建底部视图
- (void)createBottomView{
    UIView *bgView = [[UIView alloc]initWithFrame:CGRectMake(0, kScreenHeight - 50.0, kScreenWidth, 50.0)];
    bgView.backgroundColor = [UIColor whiteColor];
    
    [self.view addSubview:bgView];
    
    //全选按钮
    AllSelectButton *allSelectBtn = [AllSelectButton buttonWithType:UIButtonTypeCustom];
    allSelectBtn.frame = CGRectMake(0, 0, 70, 50.0);
    [allSelectBtn addTarget:self action:@selector(selectBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    //allSelectBtn.titleLabel.font = [UIFont systemFontOfSize:14.0f];
    [allSelectBtn setTitle:@"全选" forState:UIControlStateNormal];
    [allSelectBtn setTitle:@"取消" forState:UIControlStateSelected];
    [allSelectBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [allSelectBtn setImage:imageNamed(@"cart-us") forState:UIControlStateNormal];
    [allSelectBtn setImage:imageNamed(@"cart-s") forState:UIControlStateSelected];
    _allSelectBtn = allSelectBtn;
    [bgView addSubview:allSelectBtn];
    
    //选择张数label
    UILabel *totalNumLb = [MyControl createLabelWithFrame:CGRectMake(CGRectGetMaxX(allSelectBtn.frame) + 2, 0, 100, 40) Font:14.f Text:@""];
    _totalNumLb = totalNumLb;
    _totalNumLb.numberOfLines = 1;
    NSMutableAttributedString *str = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"共计: %ld张", selectNum] attributes:nil];
    [str addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(4, str.length - 4)];
    totalNumLb.attributedText = str;
    [totalNumLb sizeToFit];
    
    totalNumLb.y = (50 - totalNumLb.height) / 2;
    [bgView addSubview:totalNumLb];
    
    //合计押金label
    UILabel *totalDepositLb = [MyControl createLabelWithFrame:CGRectMake(CGRectGetMaxX(totalNumLb.frame) + 5, 0, 100, 40) Font:14.f Text:@""];
    _totalDepositLb = totalDepositLb;
    totalDepositLb.numberOfLines = 1;
    NSMutableAttributedString *str1 = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"合计押金: ￥%ld", totalDeposit] attributes:nil];
    [str1 addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(6, str1.length - 6)];
    totalDepositLb.attributedText = str1;
    [totalDepositLb sizeToFit];
    totalDepositLb.y = (50 - totalDepositLb.height) / 2;
    [bgView addSubview:totalDepositLb];
    
    //立即结算按钮
    UIButton *settleBtn = [MyControl createButtonWithFrame:CGRectMake(kScreenWidth - 75.0, 0, 75.0, 50.0) target:self SEL:@selector(settleBtnClick) title:@"立即结算"];
    _settleBtn = settleBtn;
    settleBtn.titleLabel.font = [UIFont systemFontOfSize:14.0f];
    [settleBtn setBackgroundImage:[UIImage imageWithColor:RGB(109, 109, 109)] forState:UIControlStateDisabled];
    [settleBtn setBackgroundImage:[UIImage imageWithColor:kRed] forState:UIControlStateNormal];
    settleBtn.enabled = NO;
    [bgView addSubview:settleBtn];
}

- (void)selectButtonClick:(ShopCartTableViewCell *)cell selected:(BOOL)selected{
    if (selected) {
        selectNum++;
        NSMutableAttributedString *str = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"共计: %ld张", selectNum] attributes:nil];
        [str addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(4, str.length - 4)];
        _totalNumLb.attributedText = str;
        //[_totalNumLb sizeToFit];
        
        totalDeposit += [[cell.desLb.text substringFromIndex:1] integerValue] ;
        NSMutableAttributedString *str1 = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"合计押金: ￥%ld", totalDeposit] attributes:nil];
        [str1 addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(6, str1.length - 6)];
        _totalDepositLb.attributedText = str1;
        //[_totalDepositLb sizeToFit];
        //_totalDepositLb.x = CGRectGetMaxX(_totalNumLb.frame);
        //_totalDepositLb.y = (50 - _totalDepositLb.height) / 2;
        
        _settleBtn.enabled = YES;
        NSIndexPath *indexPath = [_tb indexPathForCell:cell];
        CartModel *model = _dataArr[indexPath.row];
        model.isSelected = YES;
        if ([model.inventory intValue] == 0) {
            _settleBtn.enabled = NO;
        }
        [_selectArr addObject:_dataArr[indexPath.row]];
        //[_dataArr replaceObjectAtIndex:indexPath.row withObject:model];
        [_tb reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationAutomatic];
        BOOL all = YES;
        for (CartModel *model in _dataArr) {
            if (model.isSelected == NO) {
                all = NO;
            }
        }
        if (all) {
            _allSelectBtn.selected = YES;
        }
        
    } else {
        selectNum--;
        NSMutableAttributedString *str = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"共计: %ld张", selectNum] attributes:nil];
        [str addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(4, str.length - 4)];
        _totalNumLb.attributedText = str;
        //[_totalNumLb sizeToFit];
        
        totalDeposit -= [[cell.desLb.text substringFromIndex:1] integerValue] ;
        NSMutableAttributedString *str1 = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"合计押金: ￥%ld", totalDeposit] attributes:nil];
        [str1 addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(6, str1.length - 6)];
        _totalDepositLb.attributedText = str1;
        //[_totalDepositLb sizeToFit];
        //_totalDepositLb.x = CGRectGetMaxX(_totalNumLb.frame);
        //_totalDepositLb.y = (50 - _totalDepositLb.height) / 2;
        
        NSIndexPath *indexPath = [_tb indexPathForCell:cell];
        CartModel *model = _dataArr[indexPath.row];
        model.isSelected = NO;
        [_selectArr removeObject:_dataArr[indexPath.row]];
        BOOL isAll = NO;
        for (CartModel *model in _selectArr) {
            if ([model.inventory intValue] == 0) {
                isAll = YES;
                break;
            }
        }
        if (isAll) {
            _settleBtn.enabled = NO;
        } else {
            _settleBtn.enabled = YES;
        }
        
        //[_dataArr replaceObjectAtIndex:indexPath.row withObject:model];
        [_tb reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationNone];
        if (selectNum == 0) {
            _settleBtn.enabled = NO;
        }
        if (_allSelectBtn.selected) {
            _allSelectBtn.selected = NO;
            
        }
    }
    
    //_totalNumLb.width = 200;
    [_totalNumLb sizeToFit];
    [_totalDepositLb sizeToFit];
    _totalNumLb.y = (50 - _totalNumLb.height) / 2;
    _totalDepositLb.x = CGRectGetMaxX(_totalNumLb.frame) + 5;
}

- (void)setEditing:(BOOL)editing animated:(BOOL)animated{
    [super setEditing:editing animated:animated];
    [_tb setEditing:editing animated:animated];
}

- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath{
    if (indexPath.section == 0) {
        return NO;
    }
    return YES;
}

- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath{
    ShopCartTableViewCell *cell = [tableView cellForRowAtIndexPath:indexPath];
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        [self deleteCell:cell];
    }
    
}

- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath{
    return UITableViewCellEditingStyleDelete;
}

- (NSArray<UITableViewRowAction *> *)tableView:(UITableView *)tableView editActionsForRowAtIndexPath:(NSIndexPath *)indexPath{
    UITableViewRowAction *deleteRowAction = [UITableViewRowAction rowActionWithStyle:UITableViewRowActionStyleDestructive title:@"删除" handler:^(UITableViewRowAction *action, NSIndexPath *indexPath) {
        ShopCartTableViewCell *cell = [tableView cellForRowAtIndexPath:indexPath];
        [self deleteCell:cell];
        //NSLog(@"点击了删除");
    }];
    return @[deleteRowAction];
}

#pragma mark 删除某个cell
- (void)deleteCell:(ShopCartTableViewCell *)cell{
    NSIndexPath *indexPath = [_tb indexPathForCell:cell];
    __block CartModel *model = _dataArr[indexPath.row];
    
    //AFHTTPRequestOperationManager *manaager = [AFHTTPRequestOperationManager manager];
    /*
     * 参数：
     ** _memberId        用户ID
     ** _accessToken     用户accessToken
     ** recId            购物车唯一ID, 多个用逗号隔开
     */
    JGProgressHUD *hud = [[JGProgressHUD alloc]initWithStyle:JGProgressHUDStyleDark];
    hud.interactionType = JGProgressHUDInteractionTypeBlockTouchesOnHUDView;
    JGProgressHUDFadeZoomAnimation *an = [JGProgressHUDFadeZoomAnimation animation];
    hud.animation = an;
    hud.textLabel.text = @"删除中...";
    __block BOOL confirmationAsked = NO;
    hud.tapOnHUDViewBlock = ^(JGProgressHUD *h) {
        if (confirmationAsked) {
            [h dismiss];
        } else {
            h.indicatorView = [[JGProgressHUDErrorIndicatorView alloc]init];
            h.textLabel.text = @"取消 ?";
            confirmationAsked = YES;
            
            CABasicAnimation *an = [CABasicAnimation animationWithKeyPath:@"shadowOpacity"];
            an.fromValue = @(0.0f);
            an.toValue = @(0.5f);
            
            an.repeatCount = HUGE_VALF;
            an.autoreverses = YES;
            
            an.duration = 0.75f;
            
            h.HUDView.layer.shadowColor = [UIColor redColor].CGColor;
            h.HUDView.layer.shadowOffset = CGSizeZero;
            h.HUDView.layer.shadowOpacity = 0.0f;
            h.HUDView.layer.shadowRadius = 8.0f;
            
            [h.HUDView.layer addAnimation:an forKey:@"glow"];
            
            __weak __typeof(h) wH = h;
            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(4.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                if (wH && confirmationAsked) {
                    confirmationAsked = NO;
                    __strong __typeof(wH) sH = wH;
                    
                    sH.indicatorView = [[JGProgressHUDIndeterminateIndicatorView alloc] initWithHUDStyle:sH.style];
                    sH.textLabel.text = @"删除中...";
                    [h.HUDView.layer removeAnimationForKey:@"glow"];
                }
            });
            
        }
    };
    hud.tapOutsideBlock = ^(JGProgressHUD *h) {
        if (confirmationAsked) {
            confirmationAsked = NO;
            h.indicatorView = [[JGProgressHUDIndeterminateIndicatorView alloc] initWithHUDStyle:h.style];
            h.textLabel.text = @"删除中...";
            [h.HUDView.layer removeAnimationForKey:@"glow"];
        }
    };
    
    
    [hud showInView:self.navigationController.view];
    
    
    
    NSDictionary *dic = @{
                          @"_memberId":[User objectForKey:kMemberId],
                          @"_accessToken":[User objectForKey:kAccessToken],
                          @"recId":model.recId
                          };
    AppDelegate *app = [UIApplication sharedApplication].delegate;
    [NetWork getRequest:[NSString stringWithFormat:@"http://%@%@",app.host_ip,DelUserCart] params:dic success:^(id responseObj) {
        if (![responseObj[@"ret"] boolValue]) {
            //删除成功
            hud.indicatorView = [[JGProgressHUDSuccessIndicatorView alloc]init];
            
            hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
            
            hud.textLabel.text = @"删除成功";
            
            hud.position = JGProgressHUDPositionCenter;
            
            //[hud dismissAnimated:YES];
            [hud dismissAfterDelay:1.0f animated:YES];
            if (model.isSelected) {
                [_selectArr removeObject:_dataArr[indexPath.row]];
            }
            [_dataArr removeObjectAtIndex:indexPath.row];
            if (_selectArr.count == _dataArr.count) {
                if (!_allSelectBtn.selected) {
                    _allSelectBtn.selected = YES;
                }
            }
            
            [_tb reloadData];
            //重新计算总计和总押金
            [self calculateBottom];
        } else {
            //删除失败
            hud.indicatorView = [[JGProgressHUDErrorIndicatorView alloc]init];
            hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
            hud.textLabel.text = @"删除失败";
            hud.position = JGProgressHUDPositionCenter;
            [hud dismissAfterDelay:1.0f animated:YES];
        }
    } failure:^(NSError *error) {
        NSLog(@"请求失败");
        hud.indicatorView = [[JGProgressHUDErrorIndicatorView alloc]init];
        hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
        hud.textLabel.text = @"请求失败";
        hud.position = JGProgressHUDPositionCenter;
        [hud dismissAfterDelay:1.0f animated:YES];
    }];
//    [NetWork get:[NSString stringWithFormat:@"http://%@%@",app.host_ip,DelUserCart] parameters:dic success:^(id responseObject) {
//        if (![responseObject[@"ret"] boolValue]) {
//            //删除成功
//            hud.indicatorView = [[JGProgressHUDSuccessIndicatorView alloc]init];
//            
//            hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
//            
//            hud.textLabel.text = @"删除成功";
//            
//            hud.position = JGProgressHUDPositionCenter;
//            
//            //[hud dismissAnimated:YES];
//            [hud dismissAfterDelay:1.0f animated:YES];
//            if (model.isSelected) {
//                [_selectArr removeObject:_dataArr[indexPath.row]];
//            }
//            [_dataArr removeObjectAtIndex:indexPath.row];
//            if (_selectArr.count == _dataArr.count) {
//                if (!_allSelectBtn.selected) {
//                    _allSelectBtn.selected = YES;
//                }
//            }
//            
//            [_tb reloadData];
//            //重新计算总计和总押金
//            [self calculateBottom];
//        } else {
//            //删除失败
//            hud.indicatorView = [[JGProgressHUDErrorIndicatorView alloc]init];
//            hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
//            hud.textLabel.text = @"删除失败";
//            hud.position = JGProgressHUDPositionCenter;
//            [hud dismissAfterDelay:1.0f animated:YES];
//        }
//    } fail:^(NSError *error) {
//        NSLog(@"请求失败");
//        hud.indicatorView = [[JGProgressHUDErrorIndicatorView alloc]init];
//        hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
//        hud.textLabel.text = @"请求失败";
//        hud.position = JGProgressHUDPositionCenter;
//        [hud dismissAfterDelay:1.0f animated:YES];
//    }];
//    [manaager GET:[NSString stringWithFormat:@"http://%@%@",app.host_ip,DelUserCart] parameters:dic success:^(AFHTTPRequestOperation *operation, id responseObject) {
//        NSLog(@"%@",responseObject[@"ret"]);
//        if (![responseObject[@"ret"] boolValue]) {
//            //删除成功
//            hud.indicatorView = [[JGProgressHUDSuccessIndicatorView alloc]init];
//            
//            hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
//            
//            hud.textLabel.text = @"删除成功";
//            
//            hud.position = JGProgressHUDPositionCenter;
//            
//            //[hud dismissAnimated:YES];
//            [hud dismissAfterDelay:1.0f animated:YES];
//            if (model.isSelected) {
//                [_selectArr removeObject:_dataArr[indexPath.row]];
//            }
//            [_dataArr removeObjectAtIndex:indexPath.row];
//            if (_selectArr.count == _dataArr.count) {
//                if (!_allSelectBtn.selected) {
//                    _allSelectBtn.selected = YES;
//                }
//            }
//            
//            [_tb reloadData];
//            //重新计算总计和总押金
//            [self calculateBottom];
//        } else {
//            //删除失败
//            hud.indicatorView = [[JGProgressHUDErrorIndicatorView alloc]init];
//            hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
//            hud.textLabel.text = @"删除失败";
//            hud.position = JGProgressHUDPositionCenter;
//            [hud dismissAfterDelay:1.0f animated:YES];
//        }
//    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
//        NSLog(@"请求失败");
//        hud.indicatorView = [[JGProgressHUDErrorIndicatorView alloc]init];
//        hud.textLabel.font = [UIFont systemFontOfSize:14.0f];
//        hud.textLabel.text = @"请求失败";
//        hud.position = JGProgressHUDPositionCenter;
//        [hud dismissAfterDelay:1.0f animated:YES];
//    }];
    
    //NSLog(@"删除某一行");
}
#pragma mark 全选按钮点击
- (void)selectBtnClick:(UIButton *)btn{
    btn.selected = !btn.selected;
    selectNum = 0;
    totalDeposit = 0;
    if (btn.selected) {
        //全选tb
        _selectArr = [NSMutableArray arrayWithArray:_dataArr];
        selectNum = _dataArr.count;
        NSMutableAttributedString *str = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"共计: %ld张", selectNum] attributes:nil];
        [str addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(4, str.length - 4)];
        _totalNumLb.attributedText = str;
        //[_totalNumLb sizeToFit];
        for (int i = 0; i < _dataArr.count; i++) {
            CartModel *model = _dataArr[i];
            model.isSelected = YES;
            totalDeposit += [[_dataArr[i] deposit] intValue] ;
            NSMutableAttributedString *str1 = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"合计押金: ￥%ld", totalDeposit] attributes:nil];
            [str1 addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(6, str1.length - 6)];
            _totalDepositLb.attributedText = str1;
            //[_totalDepositLb sizeToFit];
            //_totalDepositLb.y = (50 - _totalDepositLb.height) / 2;
        }
        if (_dataArr.count != 0) {
            _settleBtn.enabled = YES;
        } else {
            _settleBtn.enabled = NO;
        }
        
        //[_tb reloadData];
    } else{
        //全不选
        [_selectArr removeAllObjects];
        for (int i = 0; i < _dataArr.count; i++) {
            CartModel *model = _dataArr[i];
            model.isSelected = NO;
            
           // NSIndexPath *indexPath = [NSIndexPath indexPathForRow:i inSection:1];
            //ShopCartTableViewCell *cell = [_tb cellForRowAtIndexPath:indexPath];
            //cell.selBtn.selected = NO;
        }
        NSMutableAttributedString *str = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"共计: %ld张", selectNum] attributes:nil];
        [str addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(4, str.length - 4)];
        _totalNumLb.attributedText = str;
        //[_totalNumLb sizeToFit];
        
        NSMutableAttributedString *str1 = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"合计押金: ￥%ld", totalDeposit] attributes:nil];
        [str1 addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(6, str1.length - 6)];
        _totalDepositLb.attributedText = str1;
        //[_totalDepositLb sizeToFit];
        //_totalDepositLb.y = (50 - _totalDepositLb.height) / 2;
        _settleBtn.enabled = NO;
        //[_tb reloadData];
    }
    [_totalNumLb sizeToFit];
    [_totalDepositLb sizeToFit];
    _totalDepositLb.x = CGRectGetMaxX(_totalNumLb.frame) + 5;
    _totalDepositLb.y = (50 - _totalDepositLb.height) / 2;
    
    [_tb reloadData];
}

#pragma mark 立即结算按钮点击
- (void)settleBtnClick{
    //立即结算
    [self configLeftBar];
    PayViewController *vc = [[PayViewController alloc]init];
    //
    vc.tobeVip = NO;
    NSMutableArray *titArr = [NSMutableArray array];
    for (CartModel *model in _selectArr) {
        [titArr addObject:model.titleId];
    }
    vc.titleId = titArr;
    [self.navigationController pushViewController:vc animated:YES];
}

#pragma mark - 重新就按总计和总押金
- (void)calculateBottom{
    selectNum = 0;
    totalDeposit = 0;
    //int totalDeposit = 0;
    if (_dataArr.count) {
        for (CartModel *model in _dataArr) {
            if (model.isSelected) {
                selectNum++;
                totalDeposit += [model.deposit intValue];
            }
        }
    } else {
        _allSelectBtn.selected = NO;
    }
    NSMutableAttributedString *str = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"共计: %ld张", selectNum] attributes:nil];
    [str addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(4, str.length - 4)];
    _totalNumLb.attributedText = str;
    
    NSMutableAttributedString *str1 = [[NSMutableAttributedString alloc]initWithString:[NSString stringWithFormat:@"合计押金: ￥%ld", totalDeposit] attributes:nil];
    [str1 addAttributes:@{NSForegroundColorAttributeName:kRed} range:NSMakeRange(6, str1.length - 6)];
    _totalDepositLb.attributedText = str1;
    
    [_totalNumLb sizeToFit];
    [_totalDepositLb sizeToFit];
    _totalDepositLb.x = CGRectGetMaxX(_totalNumLb.frame) + 5;
    _totalDepositLb.y = (50 - _totalDepositLb.height) / 2;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
